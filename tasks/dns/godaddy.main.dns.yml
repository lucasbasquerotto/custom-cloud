- name: "{{ cloud_service_title | default('') }} - dns - godaddy"
  set_fact:
    cloud_service_dns_title: "{{ cloud_service_title }} - dns - godaddy"
    cloud_service_dns_credentials: "{{ cloud_service_credentials.dns | default({}) }}"
  tags: ["no_print"]

- name: "{{ cloud_service_dns_title }} - godaddy dns"
  set_fact:
    cloud_service_dns_godaddy_api_server_url: >-
      {{ cloud_service_dns_credentials.api_server }}/{{ ''
      }}v{{ cloud_service_dns_credentials.api_version }}/domains{{ ''
      }}/{{ cloud_service_params.zone }}/records{{ ''
      }}/{{ cloud_service_dns_record_type }}{{ ''
      }}/{{ cloud_service_dns_record }}
    cloud_service_dns_godaddy_authorization: >-
      sso-key {{ cloud_service_dns_credentials.api_key }}:{{ cloud_service_dns_credentials.api_secret }}
    cloud_service_dns_final_state: "{{ cloud_service_dns_state }}"
    cloud_service_dns_godaddy_records: []
    cloud_service_dns_godaddy_execute: true
  tags: ["no_print"]

- name: "{{ cloud_service_dns_title }} - validate required params"
  fail:
    msg: "{{ cloud_service_dns_title }} - {{ cloud_service_dns_godaddy_item.name }} not specified"
  loop:
    - { name: "dns_zone", value: "{{ cloud_service_params.zone }}" }
    - { name: "dns_record_type", value: "{{ cloud_service_dns_record_type }}" }
    - { name: "dns_record_name", value: "{{ cloud_service_dns_record }}" }
  loop_control:
    loop_var: cloud_service_dns_godaddy_item
    label: "{{ cloud_service_dns_godaddy_item.name }}"
  when: (cloud_service_dns_godaddy_item.value | default('')) == ''
  tags: ["no_print"]

- name: "{{ cloud_service_dns_title }} - validate state"
  fail:
    msg: "{{ cloud_service_dns_title }} - dns state should be either 'present' or 'absent'"
  when: cloud_service_dns_state not in ['present', 'absent']
  tags: ["no_print"]

- name: "{{ cloud_service_dns_title }} - define final state"
  set_fact:
    cloud_service_dns_final_state: "absent"
  when: >-
    (cloud_service_dns_state == 'present') and
    ((cloud_service_dns_data_list | default([]) | length) == 0)
  tags: ["no_print"]

- name: >-
    {{ cloud_service_dns_title }} - verify if the record is there
    ({{ cloud_service_dns_godaddy_api_server_url }})
  uri:
    url: "{{ cloud_service_dns_godaddy_api_server_url }}"
    method: "GET"
    body_format: "json"
    headers:
      Authorization: "{{ cloud_service_dns_godaddy_authorization }}"
      Accept: "application/json"
  register: "cloud_service_dns_godaddy_result"
  tags: ["no_print"]

- name: "{{ cloud_service_dns_title }} - get old record"
  set_fact:
    cloud_service_dns_godaddy_old_records: "{{ cloud_service_dns_godaddy_result.json | default([]) }}"
  tags: ["no_print"]

- block:
    - name: "{{ cloud_service_dns_title }} - define the records"
      include_tasks: "godaddy.record.dns.yml"
      loop: "{{ cloud_service_dns_data_list | default([]) | flatten(levels=1) }}"
      loop_control:
        loop_var: cloud_service_dns_item
        index_var: cloud_service_dns_index
        label: "{{ cloud_service_dns_index }}"
      when: cloud_service_dns_item.value != ''
      tags: ["no_print"]

    - include_tasks: "tasks/diff.yml"
      vars:
        diff_list_1: "{{ cloud_service_dns_godaddy_old_records }}"
        diff_list_2: "{{ cloud_service_dns_godaddy_records }}"
      tags: ["no_print"]

    - name: "{{ cloud_service_dns_title }} - get old record"
      set_fact:
        cloud_service_dns_godaddy_execute: false
      when: (diff_list_result | default([]) | length) == 0
      tags: ["no_print"]

    - name: "{{ cloud_service_dns_title }} - print body"
      debug:
        var: cloud_service_dns_godaddy_records
        verbosity: 3
      tags: ["no_print_skipped"]

  when: cloud_service_dns_final_state == 'present'
  tags: ["no_print_skipped"]

- name: "{{ cloud_service_dns_title }} - verify if api should be called to delete the record"
  set_fact:
    cloud_service_dns_godaddy_execute: false
  when: >-
    (cloud_service_dns_final_state == 'absent')
    and
    ((cloud_service_dns_godaddy_old_records | length) == 0)
  tags: ["no_print"]

- name: >-
    {{ cloud_service_dns_title }} - call godaddy api to
    {{ (cloud_service_dns_final_state == 'present')
    | ternary('create/update the record', 'delete the record') }}
    ({{ cloud_service_dns_godaddy_api_server_url }})
  uri:
    url: "{{ cloud_service_dns_godaddy_api_server_url }}"
    method: "PUT"
    body: "{{ cloud_service_dns_godaddy_records | to_nice_json }}"
    body_format: "json"
    headers:
      Authorization: "{{ cloud_service_dns_godaddy_authorization }}"
      Accept: "application/json"
  changed_when: cloud_service_dns_godaddy_execute | bool
  when: cloud_service_dns_godaddy_execute | bool
  tags: ["no_print_skipped"]
